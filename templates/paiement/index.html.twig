{% extends 'base.html.twig' %}

{% block title %} Paiement{% endblock %}

{% block body %}
    <h1>Paiement</h1>
    <h2 class="font">Votre paiement est de {{total}}â‚¬</h2>
<!-- Display a payment form -->
<section class="payer">
<form id="payment-form">
	<div id="payment-element">
    <!--Stripe.js injects the Payment Element-->
	</div>
        <div id="error-message"></div>
            <button  id="submit" class="btn btn-success">
            <div class="spinner hidden" id="spinner"></div>
            <span  id="button-text">Payer maintenant</span>
            </button>
        <div id="payment-message" class="hidden"></div>
</form>
</section>
{% endblock %}
{% block javascripts %}
	{{ parent() }}
	<script src="https://js.stripe.com/v3/"></script>
            <script>
                // This is your test publishable API key.
        const stripe = Stripe("pk_test_51KquSXCuWjvU9Nkm9YtmpC79MgeZVOH5FZVrTG0H0hgCeOen30z0hYtUW5kUMHx3Mz155cl0gtuYnci84Rxb1wGl00GNUD8pvk");
        const options = {
        clientSecret: '{{clientSecret}}' 
        };

        // Set up Stripe.js and Elements to use in checkout form, passing the client secret obtained in step 2
      const elements = stripe.elements(options);

        // Create and mount the Payment Element
       const paymentElement = elements.create('payment');
        paymentElement.mount('#payment-element');
       const form = document.getElementById('payment-form');

        form.addEventListener('submit', async (event) => {
        event.preventDefault();

        const {error} = await stripe.confirmPayment({
            //Elements instance that was used to create the Payment Element
            //http://127.0.0.1:8000/purchase/payment/success/
            elements,
            confirmParams: {
            return_url: "{{ url('app_payement_success') }}",
            },
        });

        if (error) {
            // This point will only be reached if there is an immediate error when
            // confirming the payment. Show error to your customer (for example, payment
            // details incomplete)
            const messageContainer = document.querySelector('#error-message');
            messageContainer.textContent = error.message;
        } else {
            // Your customer will be redirected to your return_url. For some payment
            // methods like iDEAL, your customer will be redirected to an intermediate
            // site first to authorize the payment, then redirected to the return_url.
        }
        });

</script>

{% endblock %}



